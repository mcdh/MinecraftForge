buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'org.ow2.asm:asm-debug-all:5.0.3'
        classpath 'com.google.guava:guava:18.0'
        classpath 'net.sf.opencsv:opencsv:2.3' // reading CSVs.. also used by SpecialSource
        classpath 'com.cloudbees:diff4j:1.1' // for difing and patching
        classpath 'com.github.abrarsyed.jastyle:jAstyle:1.2' // formatting
        classpath 'net.sf.trove4j:trove4j:2.1.0' // because its awesome.
        classpath 'com.github.jponge:lzma-java:1.3' // replaces the LZMA binary
        classpath 'com.nothome:javaxdelta:2.0.1' // GDIFF implementation for BinPatches
        classpath 'com.google.code.gson:gson:2.2.4' // Used instead of Argo for buuilding changelog.
        classpath 'com.github.tony19:named-regexp:0.2.3' // 1.7 Named regexp features
        classpath 'net.md-5:SpecialSource:1.7.3' // deobf and reobs
        classpath 'org.apache.httpcomponents:httpclient:4.3.3'
        classpath 'org.apache.httpcomponents:httpmime:4.3.3'
        classpath 'de.oceanlabs.mcp:RetroGuard:3.6.6'
        classpath 'de.oceanlabs.mcp:mcinjector:3.2-SNAPSHOT'
        classpath 'net.minecraftforge.srg2source:Srg2Source:3.2-SNAPSHOT'
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-CUSTOM'
    }
}

configurations {
    deployJars
    userDev
}

dependencies {
    deployJars 'com.github.stephenc.high-scale-lib:high-scale-lib:1.1.4'
    userDev 'com.github.stephenc.high-scale-lib:high-scale-lib:1.1.4:sources'
}

import static net.minecraftforge.gradle.dev.ForgeDevPlugin.*

apply plugin: 'maven'
apply plugin: 'forgedev'

repositories {
    mavenLocal()
    flatDir {
        name "fileRepo"
        dirs "repo"
    }
}

minecraft {
    version = '1.7.10'
    mcpVersion = '9.05'
    fmlDir = projectDir.getAbsolutePath() + "/fml"
    mainClass = 'cpw.mods.fml.relauncher.ServerLaunchWrapper'
    tweakClass = 'cpw.mods.fml.common.launcher.FMLTweaker'
    installerVersion = "1.4"
}

group = 'net.minecraftforge'
version = getVersionFromJava(getProject(), 'src/main/java/net/minecraftforge/common/ForgeVersion.java')

jenkins {
    job = 'minecraftforge'
}

// crowdin stuff
if (project.hasProperty("crowdinKey"))
    tasks.getLocalizations.apiKey = project.crowdinKey


launch4j {
    jreMinVersion = '1.8.0'
}

tasks.withType(JavaCompile) {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

tasks.withType(Jar) {
    from {
        configurations.deployJars.collect() {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

uploadArchives {
    repositories {
        add getProject().repositories.mavenLocal()
    }
    repositories.mavenDeployer {
        configuration = configurations.deployJars

        if (project.hasProperty("filesmaven")) {
            logger.info('Publishing to files server')
            repository(url: project.filesmaven.url) {
                authentication(userName: project.filesmaven.username, privateKey: project.filesmaven.key)
            }
        } else {
            logger.info('Publishing to repo folder')
            repository(url: 'file://localhost/' + project.file('repo').getAbsolutePath())
        }

        pom {
            groupId = project.group
            version = project.version
            artifactId = project.archivesBaseName
        }
        pom.project {
            name project.archivesBaseName
            packaging 'jar'
            description 'Minecraft Forge API'
            url 'https://github.com/MinecraftForge/MinecraftForge'

            scm {
                url 'https://github.com/MinecraftForge/MinecraftForge'
                connection 'scm:git:git://github.com/MinecraftForge/MinecraftForge.git'
                developerConnection 'scm:git:git@github.com:MinecraftForge/MinecraftForge.git'
            }

            issueManagement {
                system 'github'
                url 'https://github.com/MinecraftForge/MinecraftForge/issues'
            }

            licenses {
                license {
                    name 'Forge Public License'
                    url 'https://raw.github.com/MinecraftForge/MinecraftForge/master/MinecraftForge-License.txt'
                    distribution 'repo'
                }
            }

            developers {
                developer {
                    id 'cpw'
                    name 'cpw'
                    roles { role 'developer' }
                }
                developer {
                    id 'LexManos'
                    name 'Lex Manos'
                    roles { role 'developer' }
                }
                developer {
                    id 'AbrarSyed'
                    name 'Abrar Syed'
                    roles { role 'contributor' }
                }
            }
        }
    }
}

task publishToMavenLocal(type: Copy) {
 dependsOn buildPackages
 def group = project.group.replace('.', '/')
 configurations.archives.artifacts.files.files.forEach {
  from it
 }
 into file("${System.properties['user.home']}/.m2/repository/$group/$project.name/$version/")
}
