buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'org.ow2.asm:asm-debug-all:5.0.3'
        classpath 'com.google.guava:guava:18.0'
        classpath 'net.sf.opencsv:opencsv:2.3' // reading CSVs.. also used by SpecialSource
        classpath 'com.cloudbees:diff4j:1.1' // for difing and patching
        classpath 'com.github.abrarsyed.jastyle:jAstyle:1.2' // formatting
        classpath 'net.sf.trove4j:trove4j:2.1.0' // because its awesome.
        classpath 'com.github.jponge:lzma-java:1.3' // replaces the LZMA binary
        classpath 'com.nothome:javaxdelta:2.0.1' // GDIFF implementation for BinPatches
        classpath 'com.google.code.gson:gson:2.2.4' // Used instead of Argo for buuilding changelog.
        classpath 'com.github.tony19:named-regexp:0.2.3' // 1.7 Named regexp features
        classpath 'net.md-5:SpecialSource:1.7.3' // deobf and reobs
        classpath 'org.apache.httpcomponents:httpclient:4.3.3'
        classpath 'org.apache.httpcomponents:httpmime:4.3.3'
        classpath 'de.oceanlabs.mcp:RetroGuard:3.6.6'
        classpath 'de.oceanlabs.mcp:mcinjector:3.2-SNAPSHOT'
        classpath 'net.minecraftforge.srg2source:Srg2Source:3.2-SNAPSHOT'
        
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-CUSTOM'
    }
}

import static net.minecraftforge.gradle.dev.FmlDevPlugin.*

apply plugin: 'maven'
apply plugin: 'fmldev'

repositories {
    flatDir {
        name "fileRepo"
        dirs "repo"
    }
}

minecraft {
    version = '1.7.10'
    mcpVersion = '9.05'
    fmlDir = projectDir.getAbsolutePath();
    mainClass = 'cpw.mods.fml.relauncher.ServerLaunchWrapper'
    tweakClass = 'cpw.mods.fml.common.launcher.FMLTweaker'
    installerVersion = "1.4"
}

group = 'net.minecraftforge'
version = getVersionFromGit(getProject())

jenkins {
    job = 'fml'
}

uploadArchives {
    repositories {
        if (project.hasProperty("filesmaven")) {
            logger.info('Publishing to files server')
            
            mavenDeployer {
                configuration = configurations.deployJars

                repository(url: project.filesmaven.url) {
                    authentication(userName: project.filesmaven.username, privateKey: project.filesmaven.key)
                }

                pom {
                    groupId = project.group
                    version = project.version
                    artifactId = project.archivesBaseName
                    project {
                        name project.archivesBaseName
                        packaging 'jar'
                        description 'ForgeModLoader'
                        url 'https://github.com/MinecraftForge/FML'

                        scm {
                            url 'https://github.com/MinecraftForge/FML'
                            connection 'scm:git:git://github.com/MinecraftForge/FML.git'
                            developerConnection 'scm:git:git@github.com:MinecraftForge/FML.git'
                        }

                        issueManagement {
                            system 'github'
                            url 'https://github.com/MinecraftForge/FML/issues'
                        }

                        licenses {
                            license {
                                name 'GNU Lesser Public License (LGPL), Version 2.1'
                                url 'http://www.gnu.org/licenses/lgpl-2.1.txt'
                                distribution 'repo'
                            }
                        }

                        developers {
                            developer {
                                id 'cpw'
                                name 'cpw'
                                roles { role 'developer' }
                            }
                            developer {
                                id 'LexManos'
                                name 'Lex Manos'
                                roles { role 'developer' }
                            }
                        }
                    }
                }
            }
        } else {
            logger.info('Publishing to repo folder')
            
            mavenDeployer {
                repository(url: 'file://localhost/' + project.file('repo').getAbsolutePath())
            }
        }
    }
}
